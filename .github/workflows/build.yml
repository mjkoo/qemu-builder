name: Build
on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:
env:
  QEMU_VERSION: '7.2.0'
  SLIRP_VERSION: '4.7.0'
jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Build docker image
        run: |
          docker build \
            --build-arg QEMU_VERSION=${{ env.QEMU_VERSION}} \
            --build-arg SLIRP_VERSION=${{ env.SLIRP_VERSION}} \
            -t qemu-${{ env.QEMU_VERSION }} - < Dockerfile
          docker create --name qemu-${{ env.QEMU_VERSION }} /does-not-exist
          docker cp qemu-${{ env.QEMU_VERSION }}:out .
          docker rm -f qemu-${{ env.QEMU_VERSION }}
      - uses: actions/upload-artifact@v3
        with:
          name: qemu-${{ env.QEMU_VERSION}}-${{ runner.os }}-${{ runner.arch }}
          path: ${{ github.workspace }}/out
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - { sys: clang64, env: clang-x86_64 }
          - { sys: clang32, env: clang-i686 }
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Cache checked out qemu code
        id: cache-checkout-windows
        uses: actions/cache@v3
        with:
          key: qemu-${{ env.QEMU_VERSION }}-${{ runner.os }}-${{ matrix.env }}
          path: ${{ github.workspace }}/qemu
      - if: ${{ steps.cache-checkout-windows.outputs.cache-hit != 'true' }}
        name: Check out qemu
        uses: actions/checkout@v3
        with:
          repository: qemu/qemu
          ref: v${{ env.QEMU_VERSION }}
          submodules: true
          path: qemu
      - name: Set up build environment
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          install: |
            diffutils
            git
            make
            ninja
            patch
            mingw-w64-${{ matrix.env }}-glib2
            mingw-w64-${{ matrix.env }}-libiconv
            mingw-w64-${{ matrix.env }}-libslirp
            mingw-w64-${{ matrix.env }}-pixman
            mingw-w64-${{ matrix.env }}-python
            mingw-w64-${{ matrix.env }}-toolchain
      - name: Build
        working-directory: ${{ github.workspace }}\qemu
        shell: msys2 {0}
        env:
          WHPX_FLAG: ${{ endsWith(matrix.sys, '64') && '--enable-whpx' || '--disable-whpx' }}
        run: |
          patch -Np1 < ../win-clang-disable-safe-stack.patch || true
          LDFLAGS=-liconv ./configure \
            '--prefix=${{ github.workspace }}/out' \
            --disable-werror \
            --static \
            --enable-strip \
            --enable-lto \
            --target-list=x86_64-softmmu \
            --without-default-features \
            --without-default-devices \
            --disable-curses \
            --disable-iconv \
            --enable-slirp \
            --enable-tcg \
            --enable-zstd \
            $WHPX_FLAG
          ninja -C build install
          rm '${{ github.workspace }}/out/edk2-a*.fd'
      - uses: actions/upload-artifact@v3
        with:
          name: qemu-${{ env.QEMU_VERSION }}-${{ runner.os }}-${{ matrix.env }}
          path: ${{ github.workspace }}/out
